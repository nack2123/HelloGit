forEach文　
    配列 = [要素1,要素2,要素3];
    配列.forEach((引数) => {処理});
    
find文　検索して出力する（単数取得）
    const(定数) = [要素1,要素2,要素3];
    const 定数 = 定数s.find((引数){
    処理＋条件
    });
    console.log(定数）
    
filter文 （複数取得）
    const(定数) = [要素1,要素2,要素3];
    const 定数 = 定数s.filter((引数){
    処理＋条件
    });
    console.log(定数)
    
map文 戻り値を複数出力する
    const(定数) = [要素1,要素2,要素3];
    const 定数 = 定数s.map((引数){
    処理＋条件
    });
    console.log(定数)
    
コールバック関数
    ・関数を引数に代入する事が出来る
    事前に定義した関数
    const call = (引数名） => {
    //処理
    };
    call（関数名）;
    関数（引数）;
    
    ・直接引数の中で定義した関数
    const call = (引数名） => {
    関数名（引数,引数）
    };
    call（（引数,引数） =>{
    console.log(処理）
    }）;
    関数（引数）;
